<p id="notice"><%= notice %></p>

<h1>Listing Widgets</h1>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @widgets.each do |widget| %>
      <tr>
        <td><%= widget.name %></td>
        <td><%= link_to 'Show', widget %></td>
        <td><%= link_to 'Edit', edit_widget_path(widget) %></td>
        <td><%= link_to 'Destroy', widget, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Widget', new_widget_path %>

<br/><br/>

Make sure there is at least one widget above, then check the API output for:
<br/><br/>
<%= link_to widgets_path(format: :json), widgets_path(format: :json) %> (normal usage, works)<br/>
<%= link_to index2_widgets_path(format: :json), index2_widgets_path(format: :json) %> (nothing strange if you supply a template as long as it is the 'convention')<br/>
<%= link_to index3_widgets_path(format: :json), index3_widgets_path(format: :json) %> (errors, looking for the conventional template, even though you told it to look for another one)<br/>
<%= link_to index4_widgets_path(format: :json), index4_widgets_path(format: :json) %> (problematic issue since people may read docs and try this as a fix for index3)<br/>
<%= link_to index5_widgets_path(format: :json), index5_widgets_path(format: :json) %> (rails will find the specified template and use it without api-pagination)<br/>
